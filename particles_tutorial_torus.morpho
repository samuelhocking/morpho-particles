import meshtools
import plot
import optimize

import "Particles.morpho" 
import "RandomPoints.morpho"

var r=1 
var a=0.35
var impl = ImplicitMeshBuilder(
    fn (x,y,z) (x^2+y^2+z^2+r^2-a^2)^2 - 4*r^2*(x^2+y^2)
    )
var torus = impl.build(
    start=Matrix([1,0,0.5]),
    stepsize=0.25,
    maxiterations=400
    )
torus.addgrade(1)
var mesh = torus

var ptsArr = GenRandomRectangle(
    1000,
    xBounds=[-2,0],
    yBounds=[-2,0],
    zBounds=[-2,2]
    )

var p = Particles(mesh)
p.project(ptsArr)

var e1 = Matrix([1,0,0])
var e2 = Matrix([0,1,0])
var e3 = Matrix([0,0,1])

var f = ConstantForce(1*e1+1*e2)
// var f = ConstantForce(-1*e3)
p.moveAll(f)

var pp = ParticlePlotter(p)
pp.plot(grade=[2], projectablePoints=true, projectedPoints=true, movedPoints=true)
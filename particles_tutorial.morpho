import meshtools
import plot
import optimize

import "Particles.morpho" 
import "RandomPoints.morpho"

var verts = [
    [-1,1,0] ,[0,1,0] ,[1,1,0],
    [-1,0,0] ,[0,0,0] ,[1,0,0],
    [-1,-1,0],[0,-1,0],[1,-1,0]
]
var edges = [
    [0,1],
    [1,2],
    [0,3],
    [0,4],
    [1,4],
    [1,5],
    [2,5],
    [3,4],
    [4,5],
    [3,6],
    [3,7],
    [4,7],
    [4,8],
    [5,8],
    [6,7],
    [7,8]
]
var faces = [
    [0,1,4],
    [0,3,4],
    [1,2,5],
    [1,4,5],
    [3,4,7],
    [3,6,7],
    [4,5,8],
    [4,7,8]
]
var mb = MeshBuilder()
for (v in verts) mb.addvertex(v)
for (e in edges) mb.addedge(e)
for (f in faces) mb.addface(f)
var plane = mb.build()
var mesh = plane

var p = Particles(mesh)

var func = fn (t) (Matrix([-0.5,t,1]))
var ptsArr = GenParametrizedLine(
    func,
    tStart = -1,
    tEnd = 1,
    numPts = 20
    )

for (x in ptsArr) print x.transpose()

p.project(ptsArr)

var e1 = Matrix([1,0,0])
var e2 = Matrix([0,1,0])
var e3 = Matrix([0,0,1])

var f = ConstantForce((1*e1))
// var f = ConstantForce((-1*e3))
p.moveAll(f)

var pp = ParticlePlotter(p)
pp.plot(grade=[2], projectablePoints=true, projectedPoints=true, movedPoints=true)
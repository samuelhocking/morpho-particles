import meshtools
import plot
import optimize
import "Particles.morpho"
import "RandomPoints.morpho"

var tester = Tester(activeFlag=true)

// Torus
var r=1
var a=0.35
var impl = ImplicitMeshBuilder(fn (x,y,z) (x^2+y^2+z^2+r^2-a^2)^2 - 4*r^2*(x^2+y^2))
// var torus = impl.build(start=Matrix([1,0,0.5]), stepsize=0.25, maxiterations=400)
var torus = impl.build(start=Matrix([1,0,0.5]), stepsize=0.1)
torus.addgrade(1)
var mesh = torus

var p = Particles(mesh, testerObj=tester)

var ptsArr = tester.call(GenRandomRectangle(1000, xBounds=[-2,2], yBounds=[-2,2], zBounds=[-2,2]), name="GenRandomRectangle")

tester.call(p.project(ptsArr), name="project")

var e100 = Matrix([1,0,0])
var e010 = Matrix([0,1,0])
var e001 = Matrix([0,0,1])

tester.call(p.moveAll(ConstantForce((1*e100) + (0.5*e001)), quiet=true), name="moveAll")

print tester.timingDict